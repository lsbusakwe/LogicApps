{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "logicAppName": {
            "type": "string",
            "defaultValue": "BlockIPviaConditionalAccess",
            "metadata": {
                "description": "Name of the Logic App"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Azure region for the Logic App"
            }
        },
        "tenantId": {
            "type": "string",
            "metadata": {
                "description": "Azure AD Tenant ID"
            }
        },
        "clientId": {
            "type": "string",
            "metadata": {
                "description": "Client ID for Microsoft Graph API authentication"
            }
        },
        "workspaceId": {
            "type": "string",
            "metadata": {
                "description": "Azure Sentinel Workspace ID (optional)"
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('logicAppName')]",
            "location": "[parameters('location')]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "Tenant_ID": {
                            "defaultValue": "[parameters('tenantId')]",
                            "type": "String"
                        },
                        "Client_ID": {
                            "defaultValue": "[parameters('clientId')]",
                            "type": "String"
                        },
                        "Workspace_ID": {
                            "defaultValue": "[parameters('workspaceId')]",
                            "type": "String"
                        },
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_HTTP_request_is_received": {
                            "type": "Request",
                            "kind": "Http",
                            "inputs": {
                                "method": "POST",
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "ipaddress": {
                                            "type": "string"
                                        },
                                        "incident_id": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "actions": {
                        "Get_secret": {
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['keyvault']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/secrets/@{encodeURIComponent('BlockIPviaConditionalAccess')}/value"
                            },
                            "runAfter": {
                                "InitializeNamedLocationID": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "secureData": {
                                    "properties": [
                                        "inputs",
                                        "outputs"
                                    ]
                                }
                            }
                        },
                        "GraphAPI_Login": {
                            "type": "Http",
                            "inputs": {
                                "uri": "https://login.microsoftonline.com/@{parameters('Tenant_ID')}/oauth2/v2.0/token",
                                "method": "POST",
                                "headers": {
                                    "Content-Type": "application/x-www-form-urlencoded"
                                },
                                "queries": {
                                    "client_id": "[parameters('Client_ID')]",
                                    "client_secret": "@{body('Get_secret')?['value']}",
                                    "grant_type": "client_credentials",
                                    "scope": "https://graph.microsoft.com/.default"
                                },
                                "body": "client_id=[parameters('Client_ID')]&scope=https%3A%2F%2Fgraph.microsoft.com%2F.default&client_secret=@{body('Get_secret')?['value']}&grant_type=client_credentials"
                            },
                            "runAfter": {
                                "Get_secret": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "GetNamedLocations": {
                            "type": "Http",
                            "inputs": {
                                "uri": "https://graph.microsoft.com/v1.0/identity/conditionalAccess/namedLocations",
                                "method": "GET",
                                "headers": {
                                    "Authorization": "Bearer @{body('GraphAPI_Login')['access_token']}"
                                }
                            },
                            "runAfter": {
                                "GraphAPI_Login": [
                                    "Succeeded"
                                ]
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "InitializeArray": {
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "LocationsArray",
                                        "type": "array"
                                    }
                                ]
                            },
                            "runAfter": {}
                        },
                        "For_each": {
                            "type": "Foreach",
                            "foreach": "@body('GetNamedLocations')['value']",
                            "actions": {
                                "Condition": {
                                    "type": "If",
                                    "expression": {
                                        "and": [
                                            {
                                                "equals": [
                                                    "@item()['displayName']",
                                                    "MaliciousIPs"
                                                ]
                                            }
                                        ]
                                    },
                                    "actions": {
                                        "ForEachIPRange": {
                                            "type": "Foreach",
                                            "foreach": "@items('For_each')['ipRanges']",
                                            "actions": {
                                                "Append_to_array_variable": {
                                                    "type": "AppendToArrayVariable",
                                                    "inputs": {
                                                        "name": "LocationsArray",
                                                        "value": "@items('ForEachIPRange')"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "SetNamedLocationID": [
                                                    "Succeeded"
                                                ]
                                            }
                                        },
                                        "AppendMaliciousIP": {
                                            "type": "AppendToArrayVariable",
                                            "inputs": {
                                                "name": "LocationsArray",
                                                "value": {
                                                    "@@odata.type": "#microsoft.graph.iPv4CidrRange",
                                                    "cidrAddress": "109.70.100.6/32"
                                                }
                                            },
                                            "runAfter": {
                                                "ForEachIPRange": [
                                                    "Succeeded"
                                                ]
                                            }
                                        },
                                        "SetNamedLocationID": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "NamedLocationID",
                                                "value": "@items('For_each')['id']"
                                            }
                                        },
                                        "UpdateNamedLocation": {
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://graph.microsoft.com/beta/identity/conditionalAccess/namedLocations/@{variables('NamedLocationID')}",
                                                "method": "PATCH",
                                                "headers": {
                                                    "Authorization": "Bearer @{body('GraphAPI_Login')['access_token']}",
                                                    "Content-Type": "application/json"
                                                },
                                                "body": {
                                                    "@@odata.type": "#microsoft.graph.ipNamedLocation",
                                                    "id": "@{items('For_each')['id']}",
                                                    "displayName": "@{items('For_each')['displayName']}",
                                                    "isTrusted": false,
                                                    "ipRanges": "@variables('LocationsArray')"
                                                }
                                            },
                                            "runAfter": {
                                                "AppendMaliciousIP": [
                                                    "Succeeded"
                                                ]
                                            }
                                        }
                                    },
                                    "else": {
                                        "actions": {}
                                    },
                                    "runAfter": {
                                        "ResetArray": [
                                            "Succeeded"
                                        ]
                                    }
                                },
                                "ResetArray": {
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "LocationsArray",
                                        "value": []
                                    }
                                }
                            },
                            "runAfter": {
                                "GetNamedLocations": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "InitializeNamedLocationID": {
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NamedLocationID",
                                        "type": "string"
                                    }
                                ]
                            },
                            "runAfter": {
                                "InitializeArray": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "PlaceholderforSubject": {
                            "type": "Compose",
                            "inputs": "SOC Automation - IP address blocked due to a Security Incident",
                            "runAfter": {
                                "For_each": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "PlaceHolderforMessage": {
                            "type": "Compose",
                            "inputs": "The IP Address @{triggerBody()?['ipaddress']} has been added to a blocklist as part of the SOC's autoremediation. The IP Address should only be removed from the blocklist if the incident is a false positive.",
                            "runAfter": {
                                "PlaceholderforSubject": [
                                    "Succeeded"
                                ]
                            }
                        },
                        "Response": {
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 200,
                                "body": {
                                    "status": "success"
                                }
                            },
                            "runAfter": {
                                "PlaceHolderforMessage": [
                                    "Succeeded"
                                ]
                            }
                        }
                    }
                },
                "parameters": {
                    "$connections": {
                        "value": {}
                    }
                }
            }
        }
    ]
}
